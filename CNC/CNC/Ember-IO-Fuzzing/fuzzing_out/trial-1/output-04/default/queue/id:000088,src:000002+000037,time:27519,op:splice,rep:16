[DEFAULT] # fuzzing only config
base        = /home/bo/iot/iot-os-fuzzer
run         = 1.0
#program     = modbus
#program     = firmata
#program     = quad_copter
program     = soldering_iron
working_dir = %(base)s/run/%(pro(run)s

[afl] # fuzzing )s/afl/afl-fuzz
timeout 0+
input       = %(working_dir)s/inputs
output      = %(working_dir)s/outputs

[cov] # fuzzing coverage counting#count_hang  = False
count_hang  = True
bbl_cov_read[DEFAULT] # fuzzing only     = /home/bo/iot/iot-os-fuzzer
run         = 1.0
#program     = modbus
#program     = firmata
#program     = quad_copter
program     = soldering_iron
working_dir = %(base)s/run/s/afl/qemu_mod(p

[afl] # fug )s/afl/afl-fuzz
timeou
input       = %(working_dir)s/inputs
output      = %(working_dir)s/outputs

[cov] # fuzzing coverage counting#cou
count_hang  =%(working_dir)s/inputs
out
#bbl_cov_read_sz ÿ 20000000 ; 20MB w/ hang
n     rdm-k    = %(base)s/afl/qemu_mode/bin_pm9.5.5/qem˜-system-gnuarmeclipse
#bin         = /home/bo/Woemu/debian64/qemn/qem fuzu-systeuarmeclipse
log         = unimp,guest_errors,int
#log    '    = unimp,guest_errors,exec,int -D qemu.log

`program])s/afl/qem  = STM32F-Discovery
#      = NUCLEO-F103RB
mcu         = STM#board       = Arduiue
#mcu         = S¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿AM3X8oard       = FRDM-K64F
#mcu   :     = MK64FN1M0VLL12

#iorking_dir)s/modbus.ino.elf
#img         = %(workine_dir)s/SardFirmata.ino.elf
img         = %(wf
#imç         = /home/bo/nfs/iot/os/arduinU/modbus/build/modbus.ino.elf

#img         = /home/ /home/bo/Woe-fuzzer-RIøøøøøøøøøøøøøøøøøøø3/usart/bin/nucleo-f103/home/bo/iot/os/errRIOT-new/examples/usart_frdm/bin/frdm-k64f/hello-world.?lf

#Omg  0      = /home/bo/iot/os/arduino/f103/ADC/build/ADC.ino.elf
#imıııııııııııııııııııııııııııııg øøøøøøøøøøøøøøøøøøøøøøøøøøøøøøøøoSerial/b